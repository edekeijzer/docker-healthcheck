#!/usr/bin/with-contenv ash

while getopts "c:d:vh" OPT ; do
  case $OPT in
    c) CONFIG_FILE=${OPTARG};;
    d) HEALTHCHECKS=${OPTARG};;
    v) FAIL_VERBOSE=1;;
    h) echo "Check GitHub for help!" ; exit;;
    *)exit $E_OPTERROR;;
  esac
  OPRIND=${OPTIND}
done

if [ -z ${CONFIG_FILE} ] ; then
  [ -e /etc/healthcheck.conf ] && CONFIG_FILE=/etc/healthcheck.conf
else
  if [ -e ${CONFIG_FILE} ] ; then
    source ${CONFIG_FILE}
  else
    echo "ERROR: specified config file ${CONFIG_FILE} not found"
    exit 1
  fi
fi

# Use config values from config file or defaults if not overridden from command line
[ -z "${HEALTHCHECKS}" ] && HEALTHCHECKS=${directory:-'/etc/healthcheck.d'}
[ -z "${FAIL_VERBOSE}" ] && FAIL_VERBOSE=${verbose:-'0'}

ERRORLEVEL=0
if [ ! -d ${HEALTHCHECKS} ] ; then
  echo "ERROR: healthcheck directory ${HEALTHCHECKS} not found"
  exit 2
elif [ $(ls -1 ${HEALTHCHECKS} | wc -l) -eq 0 ] ; then
  echo "WARNING: healthcheck directory ${HEALTHCHECKS} is empty" || echo $(ls -1 ${HEALTHCHECKS} | wc -l)
else
for HEALTHCHECK in $(ls -1 ${HEALTHCHECKS} | grep -ve 'README') ; do
    echo -n "${HEALTHCHECK}: "
    # Ignore OK output but show error
    if [ ${FAIL_VERBOSE} -eq 0 ] ; then
      if source ${HEALTHCHECKS%/}/${HEALTHCHECK} 1>/dev/null 2>&1 ; then
        echo "OK"
      else
        echo "FAIL"
        # ash does not allow <<< string redirection to bc
        ERRORLEVEL=$(echo "${ERRORLEVEL} + 1" | bc)
      fi
    else
      if source ${HEALTHCHECKS%/}/${HEALTHCHECK} 1>/dev/null ; then
        echo "OK"
      else
        ERRORLEVEL=$(echo "${ERRORLEVEL} + 1" | bc)
      fi
    fi
  done
fi

exit ${ERRORLEVEL}
